import { default as regl } from 'regl';
import { CoreModule } from '../core-module';
export declare class Points extends CoreModule {
    currentPositionFbo: regl.Framebuffer2D | undefined;
    previousPositionFbo: regl.Framebuffer2D | undefined;
    velocityFbo: regl.Framebuffer2D | undefined;
    selectedFbo: regl.Framebuffer2D | undefined;
    hoveredFbo: regl.Framebuffer2D | undefined;
    greyoutStatusFbo: regl.Framebuffer2D | undefined;
    private colorBuffer;
    private sizeFbo;
    private sizeBuffer;
    private trackedIndicesFbo;
    private trackedPositionsFbo;
    private sampledPointsFbo;
    private drawCommand;
    private drawHighlightedCommand;
    private updatePositionCommand;
    private dragPointCommand;
    private findPointsOnAreaSelectionCommand;
    private findHoveredPointCommand;
    private clearHoveredFboCommand;
    private clearSampledPointsFboCommand;
    private fillSampledPointsFboCommand;
    private trackPointsCommand;
    private trackedIndices;
    private selectedTexture;
    private greyoutStatusTexture;
    private sizeTexture;
    private trackedIndicesTexture;
    private drawPointIndices;
    private hoveredPointIndices;
    private sampledPointIndices;
    updatePositions(): void;
    initPrograms(): void;
    updateColor(): void;
    updateGreyoutStatus(): void;
    updateSize(): void;
    updateSampledPointsGrid(): void;
    trackPoints(): void;
    draw(): void;
    updatePosition(): void;
    drag(): void;
    findPointsOnAreaSelection(): void;
    findHoveredPoint(): void;
    trackPointsByIndices(indices?: number[] | undefined): void;
    getTrackedPositionsMap(): Map<number, [number, number]>;
    getSampledPointPositionsMap(): Map<number, [number, number]>;
    private swapFbo;
}
